Notebook[{

Cell[CellGroupData[{
Cell["M2MD", "Title",ExpressionUUID->"6d30d064-6ad5-4d00-ad1b-e90016088dff"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"PacletDirectoryAdd", " ", "@", " ", 
  RowBox[{"NotebookDirectory", "[", "]"}]}], "\n", 
 RowBox[{"SetDirectory", "@", 
  RowBox[{"NotebookDirectory", "[", "]"}]}]}], "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"5384612b-2fdb-4dd0-896d-9c2a84aa7f4e"],

Cell[BoxData[
 RowBox[{"{", "\<\"E:\\\\Idea Projects\\\\M2MD\\\\\"\>", "}"}]], "Output",
 CellLabel->"Out[1]=",ExpressionUUID->"6c926d0f-bb2b-4931-be81-085354191fab"],

Cell[BoxData["\<\"E:\\\\Idea Projects\\\\M2MD\"\>"], "Output",
 CellLabel->"Out[2]=",ExpressionUUID->"b832c2eb-bdc6-461b-8e03-43b5cb80ae46"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"<<", "M2MD`"}]], "Input",
 CellLabel->"In[3]:=",ExpressionUUID->"aeb9f136-81cb-44fa-b647-6baeefdfeb0d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CreateDocument", "[", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"Cell", "[", 
     RowBox[{
      RowBox[{"M2MD", " ", "@", " ", 
       RowBox[{"EvaluationNotebook", "[", "]"}]}], ",", "\"\<Program\>\""}], 
     "]"}], "}"}], "\[IndentingNewLine]", "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellLabel->
  "In[305]:=",ExpressionUUID->"dabb488c-d0c3-44a6-a3f4-9ac1cddbec74"],

Cell[CellGroupData[{

Cell["build", \
"Subsection",ExpressionUUID->"106fee2a-c44e-4872-85cf-70e13c705c5d"],

Cell[BoxData[
 RowBox[{"<<", "build.m"}]], "Input",
 CellLabel->"In[7]:=",ExpressionUUID->"5ac09f12-8b81-4f73-916d-f0b2c0360f4b"],

Cell[BoxData[
 RowBox[{"PreviousCell", "[", "]"}]], "Input",
 CellLabel->"In[37]:=",ExpressionUUID->"abfe85b0-5012-404f-85cc-97d95d6924f5"],

Cell[BoxData[
 RowBox[{"SetDirectory", "@", "$TemporaryDirectory"}]], "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"92e6ee82-80c3-472c-87a3-4f585b0f016a"],

Cell[BoxData[
 RowBox[{"Import", "@", "\"\<img\\0uz4wtklk8hh5.png\>\""}]], "Input",
 EmphasizeSyntaxErrors->True,
 CellLabel->"In[2]:=",ExpressionUUID->"36c9a17f-5d8c-4bf0-8430-197923a83da6"],

Cell[BoxData[
 RowBox[{"Directory", "[", "]"}]], "Input",
 CellLabel->"In[9]:=",ExpressionUUID->"2def5db5-5e9f-471e-b3be-9a5ba4bbf29b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MDExport", "[", 
   RowBox[{"\"\<test.md\>\"", ",", 
    RowBox[{
     RowBox[{"Notebooks", "[", "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "//", 
  "AbsoluteTiming"}]], "Input",
 CellLabel->"In[2]:=",ExpressionUUID->"025f7c36-8f61-4289-819d-b87d43162bb0"],

Cell[BoxData[
 RowBox[{"SystemOpen", "@", 
  RowBox[{"%", "[", 
   RowBox[{"[", "2", "]"}], "]"}]}]], "Input",
 CellLabel->"In[3]:=",ExpressionUUID->"e33cf853-1695-46b7-8632-2c3284124825"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Notebooks", "[", "]"}], "[", 
  RowBox[{"[", "2", "]"}], "]"}]], "Input",
 CellLabel->
  "In[150]:=",ExpressionUUID->"71e89637-89d5-43c2-a335-281fa7a21993"],

Cell[BoxData[
 RowBox[{"PrintDefinitions", "@", "M2MD"}]], "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"0099416c-8c5d-4497-9915-73781789714b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["tests", \
"Section",ExpressionUUID->"d6f7fe7e-3205-41c8-bb96-753bc71c7aa5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"reports", "=", 
  RowBox[{"TestReport", " ", "/@", " ", 
   RowBox[{"FileNames", "[", 
    RowBox[{"\"\<*.m\>\"", ",", " ", 
     RowBox[{"{", 
      RowBox[{"FileNameJoin", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"NotebookDirectory", "[", "]"}], ",", " ", "\"\<Tests\>\""}],
         "}"}], "]"}], "}"}]}], "]"}]}]}]], "Input",
 CellLabel->"In[4]:=",ExpressionUUID->"5b53fe5f-f56a-432c-b96f-b38c91a9e46a"],

Cell[BoxData[
 RowBox[{"{", 
  InterpretationBox[
   RowBox[{
    TagBox["TestReportObject",
     "SummaryHead"], "[", 
    DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
     TemplateBox[{
       PaneSelectorBox[{False -> GridBox[{{
             PaneBox[
              ButtonBox[
               DynamicBox[
                FEPrivate`FrontEndResource[
                "FEBitmaps", "SquarePlusIconMedium"]], 
               ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
               Evaluator -> Automatic, Method -> "Preemptive"], 
              Alignment -> {Center, Center}, ImageSize -> 
              Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}]], 
             GraphicsBox[{
               InsetBox[
                BoxData[
                 FormBox[
                  PaneBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                   Center, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  TraditionalForm]]]}, PlotRange -> {{0, 1}, {0, 1}}, 
              Background -> GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
              ImageSize -> 
              Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}], Frame -> True, 
              FrameTicks -> None, FrameStyle -> Directive[
                Thickness[Tiny], 
                GrayLevel[0.55]]], 
             GridBox[{{
                RowBox[{
                  TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["\"Test Report: Basic.m\"", "SummaryItem"]}], 
                "\[SpanFromLeft]"}, {
                RowBox[{
                  TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   TemplateBox[{"97", "\"%\""}, "RowDefault"], 
                   "SummaryItem"]}], 
                RowBox[{
                  TagBox["\"Tests run: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["29", "SummaryItem"]}]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
           GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}], True -> GridBox[{{
             PaneBox[
              ButtonBox[
               DynamicBox[
                FEPrivate`FrontEndResource[
                "FEBitmaps", "SquareMinusIconMedium"]], 
               ButtonFunction :> (Typeset`open$$ = False), Appearance -> None,
                Evaluator -> Automatic, Method -> "Preemptive"], 
              Alignment -> {Center, Center}, ImageSize -> 
              Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}]], 
             GraphicsBox[{
               InsetBox[
                BoxData[
                 FormBox[
                  PaneBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                   Center, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  TraditionalForm]]]}, PlotRange -> {{0, 1}, {0, 1}}, 
              Background -> GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
              ImageSize -> 
              Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}], Frame -> True, 
              FrameTicks -> None, FrameStyle -> Directive[
                Thickness[Tiny], 
                GrayLevel[0.55]]], 
             GridBox[{{
                RowBox[{
                  TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["\"Test Report: Basic.m\"", "SummaryItem"]}], 
                "\[SpanFromLeft]"}, {
                RowBox[{
                  TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   TemplateBox[{"97", "\"%\""}, "RowDefault"], 
                   "SummaryItem"]}], 
                RowBox[{
                  TagBox["\"Tests run: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["29", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Succeeded: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["28", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                RowBox[{
                  TagBox["\"Failed: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["1", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                RowBox[{
                  TagBox[
                  "\"Failed with wrong results: \"", "SummaryItemAnnotation"],
                   "\[InvisibleSpace]", 
                  TagBox["1", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                RowBox[{
                  TagBox[
                  "\"Failed with messages: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                RowBox[{
                  TagBox["\"Failed with errors: \"", "SummaryItemAnnotation"],
                   "\[InvisibleSpace]", 
                  TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
           GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]}, 
        Dynamic[Typeset`open$$], ImageSize -> Automatic]},
      "SummaryPanel"],
     DynamicModuleValues:>{}], "]"}],
   TestReportObject[
    Association[
    "Title" -> "Test Report: Basic.m", "TimeElapsed" -> 
     Quantity[0.3, "Seconds"], "TestsSucceededCount" -> 28, 
     "TestsFailedCount" -> 1, "TestsFailedWrongResultsCount" -> 1, 
     "TestsFailedWithMessagesCount" -> 0, "TestsFailedWithErrorsCount" -> 0, 
     "Aborted" -> False, "TestResults" -> Association[1 -> TestResultObject[
         Association[
         "TestClass" -> None, "TestIndex" -> 1, "TestID" -> 
          "ToImageName basic", "Outcome" -> "Success", "Input" -> HoldForm[
            M2MD`Private`ToImageName["test"]], "ExpectedOutput" -> 
          HoldForm["0bleddx8vw5yk"], "ActualOutput" -> 
          HoldForm["0bleddx8vw5yk"], "ExpectedMessages" -> {}, 
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
          Quantity[0``7.150514997831988, "Seconds"], "CPUTimeUsed" -> 
          Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[2216, "Bytes"]]], 
       2 -> TestResultObject[
         Association[
         "TestClass" -> None, "TestIndex" -> 2, "TestID" -> "CodeInline", 
          "Outcome" -> "Success", "Input" -> HoldForm[
            M2MD`M2MD[
             Cell[
              TextData[{"Use ", 
                Cell[
                 BoxData[
                  RowBox[{"Print", "[", 
                    RowBox[{"1", "+", "1"}], "]"}]]], " to print stuff."}], 
              "Text"]]], "ExpectedOutput" -> 
          HoldForm["Use `Print[1+1]` to print stuff."], "ActualOutput" -> 
          HoldForm["Use `Print[1+1]` to print stuff."], 
          "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
          "AbsoluteTimeUsed" -> 
          Quantity[0.0229384`5.51107811953129, "Seconds"], "CPUTimeUsed" -> 
          Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[51968, "Bytes"]]],
        3 -> TestResultObject[
         Association[
         "TestClass" -> None, "TestIndex" -> 3, "TestID" -> "LaTeXInline", 
          "Outcome" -> "Success", "Input" -> HoldForm[
            M2MD`M2MD[
             Cell[
              TextData[{"test ", 
                Cell[
                 BoxData[
                  FormBox[
                   RowBox[{"1", "+", "1"}], TraditionalForm]], FormatType -> 
                 "TraditionalForm"]}], "Subsection"]]], "ExpectedOutput" -> 
          HoldForm["### test $1+1$"], "ActualOutput" -> 
          HoldForm["### test $1+1$"], "ExpectedMessages" -> {}, 
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
          Quantity[0.0159571`5.353468964518661, "Seconds"], "CPUTimeUsed" -> 
          Quantity[0., "Seconds"], "MemoryUsed" -> 
          Quantity[724392, "Bytes"]]], 4 -> TestResultObject[
         Association[
         "TestClass" -> None, "TestIndex" -> 4, "TestID" -> "Inline image", 
          "Outcome" -> "Success", "Input" -> HoldForm[
            Block[{M2MD`ToImageElement, M2MD`Private`MDElement, StringJoin}, 
             ToString[
              M2MD`M2MD[
               Cell[
                TextData[{"test ", 
                  Cell[
                   BoxData[
                    FormBox[
                    GraphicsBox[
                    DiskBox[{0, 0}], ImageSize -> 20], TraditionalForm]], 
                   FormatType -> "TraditionalForm"]}], "Section"]]]]], 
          "ExpectedOutput" -> 
          HoldForm[
           "MDElement[h2, StringJoin[{test , \
ToImageElement[FormBox[GraphicsBox[DiskBox[{0, 0}], ImageSize -> 20], \
TraditionalForm]]}]]"], "ActualOutput" -> 
          HoldForm[
           "MDElement[h2, StringJoin[{test , \
ToImageElement[FormBox[GraphicsBox[DiskBox[{0, 0}], ImageSize -> 20], \
TraditionalForm]]}]]"], "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
          "AbsoluteTimeUsed" -> Quantity[0``7.150514997831988, "Seconds"], 
          "CPUTimeUsed" -> Quantity[0., "Seconds"], "MemoryUsed" -> 
          Quantity[8184, "Bytes"]]], 5 -> TestResultObject[
         Association[
         "TestClass" -> None, "TestIndex" -> 5, "TestID" -> 
          "ToImageName[boxes]", "Outcome" -> "Success", "Input" -> HoldForm[
            M2MD`Private`ToImageName[
             RowBox[{}]]], "ExpectedOutput" -> HoldForm["10tvi4mw3rg8l"], 
          "ActualOutput" -> HoldForm["10tvi4mw3rg8l"], 
          "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
          "AbsoluteTimeUsed" -> Quantity[0``7.150514997831988, "Seconds"], 
          "CPUTimeUsed" -> Quantity[0., "Seconds"], "MemoryUsed" -> 
          Quantity[184, "Bytes"]]], 6 -> TestResultObject[
         Association[
         "TestClass" -> None, "TestIndex" -> 6, "TestID" -> 
          "Inline image in std form", "Outcome" -> "Success", "Input" -> 
          HoldForm[
            Block[{M2MD`ToImageElement, M2MD`Private`MDElement, StringJoin}, 
             ToString[
              M2MD`M2MD[
               Cell[
                TextData[{
                  Cell[
                   BoxData[
                    GraphicsBox[{
                    Disk[{0, 0}]}]]], " IGraph/M"}], "Title"]]]]], 
          "ExpectedOutput" -> 
          HoldForm[
           "MDElement[h1, StringJoin[{ToImageElement[GraphicsBox[{Disk[{0, \
0}]}]],  IGraph/M}]]"], "ActualOutput" -> 
          HoldForm[
           "MDElement[h1, StringJoin[{ToImageElement[GraphicsBox[{Disk[{0, \
0}]}]],  IGraph/M}]]"], "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
          "AbsoluteTimeUsed" -> 
          Quantity[0.0009698`4.137197177611493, "Seconds"], "CPUTimeUsed" -> 
          Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[648, "Bytes"]]], 
       7 -> TestResultObject[
         Association[
         "TestClass" -> None, "TestIndex" -> 7, "TestID" -> "BoxesToTeX", 
          "Outcome" -> "Success", "Input" -> 
          HoldForm[$CellContext`$CellData = Cell[
               BoxData[
                ToBoxes[
                 TraditionalForm[
                  HypergeometricPFQ[{
                    Subscript[M2MD`Private`a, 1], 
                    Subscript[M2MD`Private`a, 2]}, {
                    Subscript[M2MD`Private`b, 1], 
                    Subscript[M2MD`Private`b, 2]}, $CellContext`x]]]], 
               "Output"]; ToString[
               DisplayForm[$CellContext`$CellData], TeXForm] === ToString[
               RawBoxes[$CellContext`$CellData], TeXForm] === ToString[
               TeXForm[
                RawBoxes[$CellContext`$CellData]]] === ToString[
               TeXForm[
                RawBoxes[
                 Part[$CellContext`$CellData, 1]]]] === ToString[
               TeXForm[
                RawBoxes[
                 Part[$CellContext`$CellData, 1, 1]]]] === ToString[
               TeXForm[
                RawBoxes[
                 Part[$CellContext`$CellData, 1, 1, 1, 1]]]] === 
             Convert`TeX`BoxesToTeX[$CellContext`$CellData]], 
          "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
          HoldForm[True], "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
          "AbsoluteTimeUsed" -> 
          Quantity[0.0508645`5.856929777555203, "Seconds"], "CPUTimeUsed" -> 
          Quantity[0.016000000000000014`, "Seconds"], "MemoryUsed" -> 
          Quantity[2912360, "Bytes"]]], 8 -> TestResultObject[
         Association[
         "TestClass" -> None, "TestIndex" -> 8, "TestID" -> "Inline code", 
          "Outcome" -> "Success", "Input" -> HoldForm[
            M2MD`M2MD[
             Cell[
              TextData[{"Inline code: ", 
                Cell[
                 BoxData[{"1+1"}]]}], "Title"]]], "ExpectedOutput" -> 
          HoldForm["# Inline code: `1+1`"], "ActualOutput" -> 
          HoldForm["# Inline code: `1+1`"], "ExpectedMessages" -> {}, 
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
          Quantity[0.0159578`5.3534880155661275, "Seconds"], "CPUTimeUsed" -> 
          Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[472, "Bytes"]]], 
       9 -> TestResultObject[
         Association[
         "TestClass" -> None, "TestIndex" -> 9, "TestID" -> "String", 
          "Outcome" -> "Success", "Input" -> HoldForm[
            M2MD`M2MD["string"]], "ExpectedOutput" -> HoldForm["string"], 
          "ActualOutput" -> HoldForm["string"], "ExpectedMessages" -> {}, 
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
          Quantity[0``7.150514997831988, "Seconds"], "CPUTimeUsed" -> 
          Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[96, "Bytes"]]], 
       10 -> TestResultObject[
         Association[
         "TestClass" -> None, "TestIndex" -> 10, "TestID" -> "Program cell", 
          "Outcome" -> "Success", "Input" -> HoldForm[
            M2MD`M2MD[
             Cell["1+\n2", "Program"]]], "ExpectedOutput" -> 
          HoldForm["```wl\n1+\n2\n```"], "ActualOutput" -> 
          HoldForm["```wl\n1+\n2\n```"], "ExpectedMessages" -> {}, 
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
          Quantity[0.03393`5.681098857477106, "Seconds"], "CPUTimeUsed" -> 
          Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[272, "Bytes"]]], 
       11 -> TestResultObject[
         Association[
         "TestClass" -> None, "TestIndex" -> 11, "TestID" -> "InputBlock", 
          "Outcome" -> "Success", "Input" -> HoldForm[
            M2MD`M2MD[
             Cell[
              BoxData[
               RowBox[{"<<", "M2MD`"}]], "Input"]]], "ExpectedOutput" -> 
          HoldForm["```wl\n<<M2MD`\n```"], "ActualOutput" -> 
          HoldForm["```wl\n<<M2MD`\n```"], "ExpectedMessages" -> {}, 
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
          Quantity[0.0149864`5.326212317944758, "Seconds"], "CPUTimeUsed" -> 
          Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[280, "Bytes"]]], 
       12 -> TestResultObject[
         Association[
         "TestClass" -> None, "TestIndex" -> 12, "TestID" -> "Simple output", 
          "Outcome" -> "Failure", "Input" -> HoldForm[
            M2MD`M2MD[
             Cell[
              BoxData["\"E:\\\\Idea Projects\\\\M2MD\""], "Output"]]], 
          "ExpectedOutput" -> 
          HoldForm["```\n(*E:\\Idea Projects\\M2MD*)\n```"], "ActualOutput" -> 
          HoldForm["```\n(*\"E:\\\\Idea Projects\\\\M2MD\"*)\n```"], 
          "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
          "AbsoluteTimeUsed" -> 
          Quantity[0.0149592`5.325423366435592, "Seconds"], "CPUTimeUsed" -> 
          Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[296, "Bytes"]]], 
       13 -> TestResultObject[
         Association[
         "TestClass" -> None, "TestIndex" -> 13, "TestID" -> "simple text", 
          "Outcome" -> "Success", "Input" -> HoldForm[
            M2MD`M2MD[
             Cell["asdasd", "Text"]]], "ExpectedOutput" -> HoldForm["asdasd"],
           "ActualOutput" -> HoldForm["asdasd"], "ExpectedMessages" -> {}, 
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
          Quantity[0``7.150514997831988, "Seconds"], "CPUTimeUsed" -> 
          Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[264, "Bytes"]]], 
       14 -> TestResultObject[
         Association[
         "TestClass" -> None, "TestIndex" -> 14, "TestID" -> 
          "simple text data", "Outcome" -> "Success", "Input" -> HoldForm[
            M2MD`M2MD[
             Cell[
              TextData["asdasd"], "Text"]]], "ExpectedOutput" -> 
          HoldForm["asdasd"], "ActualOutput" -> HoldForm["asdasd"], 
          "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
          "AbsoluteTimeUsed" -> Quantity[0``7.150514997831988, "Seconds"], 
          "CPUTimeUsed" -> Quantity[0., "Seconds"], "MemoryUsed" -> 
          Quantity[264, "Bytes"]]], 15 -> TestResultObject[
         Association[
         "TestClass" -> None, "TestIndex" -> 15, "TestID" -> 
          "unknown text style", "Outcome" -> "Success", "Input" -> HoldForm[
            M2MD`M2MD[
             Cell[
              TextData["asdasd"], "Whatever"]]], "ExpectedOutput" -> 
          HoldForm["asdasd"], "ActualOutput" -> HoldForm["asdasd"], 
          "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
          "AbsoluteTimeUsed" -> Quantity[0``7.150514997831988, "Seconds"], 
          "CPUTimeUsed" -> Quantity[0., "Seconds"], "MemoryUsed" -> 
          Quantity[264, "Bytes"]]], 16 -> TestResultObject[
         Association[
         "TestClass" -> None, "TestIndex" -> 16, "TestID" -> 
          "Cell to InputCode", "Outcome" -> "Success", "Input" -> HoldForm[
            M2MD`M2MD[
             Cell[
              BoxData[
               RowBox[{"M2MD", " ", "@"}]], "Code", CellLabel -> "TEST"]]], 
          "ExpectedOutput" -> HoldForm["```wl\nM2MD @\n```"], "ActualOutput" -> 
          HoldForm["```wl\nM2MD @\n```"], "ExpectedMessages" -> {}, 
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
          Quantity[0.0319153`5.654513928933146, "Seconds"], "CPUTimeUsed" -> 
          Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[280, "Bytes"]]], 
       17 -> TestResultObject[
         Association[
         "TestClass" -> None, "TestIndex" -> 17, "TestID" -> 
          "BoxesToStringType", "Outcome" -> "Success", "Input" -> HoldForm[
            
            M2MD`M2MD[$CellContext`$inputCell, "BoxesToStringType" -> 
             "InputText"]], "ExpectedOutput" -> 
          HoldForm["```wl\nfoo[\n bar[\n  1, 2\n  ]\n ]\n```"], 
          "ActualOutput" -> 
          HoldForm["```wl\nfoo[\n bar[\n  1, 2\n  ]\n ]\n```"], 
          "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
          "AbsoluteTimeUsed" -> 
          Quantity[0.0149602`5.325452397397581, "Seconds"], "CPUTimeUsed" -> 
          Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[448, "Bytes"]]], 
       18 -> TestResultObject[
         Association[
         "TestClass" -> None, "TestIndex" -> 18, "TestID" -> 
          "parseData@ButtonBox[\"the C/igraph \
documentation\",BaseStyle->\"Hyp...", "Outcome" -> "Success", "Input" -> 
          HoldForm[
            M2MD`Private`parseData[
             ButtonBox[
             "the C/igraph documentation", BaseStyle -> "Hyperlink", 
              ButtonData -> {
                URL["http://igraph.org/c/doc/"], None}, ButtonNote -> 
              "http://igraph.org/c/doc/"]]], "ExpectedOutput" -> 
          HoldForm["[the C/igraph documentation](http://igraph.org/c/doc/)"], 
          "ActualOutput" -> 
          HoldForm["[the C/igraph documentation](http://igraph.org/c/doc/)"], 
          "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
          "AbsoluteTimeUsed" -> 
          Quantity[0.0009745`4.139296841285628, "Seconds"], "CPUTimeUsed" -> 
          Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[1824, "Bytes"]]], 
       19 -> TestResultObject[
         Association[
         "TestClass" -> None, "TestIndex" -> 19, "TestID" -> 
          "InputForm output", "Outcome" -> "Success", "Input" -> HoldForm[
            M2MD`M2MD[
             Cell["test", "Output", CellLabel -> "Out[79]//InputForm="]]], 
          "ExpectedOutput" -> HoldForm["```wl\ntest\n```"], "ActualOutput" -> 
          HoldForm["```wl\ntest\n```"], "ExpectedMessages" -> {}, 
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
          Quantity[0.0010228`4.160305717186285, "Seconds"], "CPUTimeUsed" -> 
          Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[136, "Bytes"]]], 
       20 -> TestResultObject[
         Association[
         "TestClass" -> None, "TestIndex" -> 20, "TestID" -> "Item", 
          "Outcome" -> "Success", "Input" -> HoldForm[
            M2MD`M2MD[
             Cell["Test", "Item"]]], "ExpectedOutput" -> HoldForm["- Test"], 
          "ActualOutput" -> HoldForm["- Test"], "ExpectedMessages" -> {}, 
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
          Quantity[0``7.150514997831988, "Seconds"], "CPUTimeUsed" -> 
          Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[2496, "Bytes"]]], 
       21 -> TestResultObject[
         Association[
         "TestClass" -> None, "TestIndex" -> 21, "TestID" -> "SubItem", 
          "Outcome" -> "Success", "Input" -> HoldForm[
            M2MD`M2MD[
             Cell["Test", "Subitem"]]], "ExpectedOutput" -> 
          HoldForm["    - Test"], "ActualOutput" -> HoldForm["    - Test"], 
          "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
          "AbsoluteTimeUsed" -> Quantity[0``7.150514997831988, "Seconds"], 
          "CPUTimeUsed" -> Quantity[0., "Seconds"], "MemoryUsed" -> 
          Quantity[272, "Bytes"]]], 22 -> TestResultObject[
         Association[
         "TestClass" -> None, "TestIndex" -> 22, "TestID" -> 
          "Subsubitem linebreaks", "Outcome" -> "Success", "Input" -> HoldForm[
            M2MD`M2MD[
             Cell["Test\nTest", "Subsubitem"]]], "ExpectedOutput" -> 
          HoldForm["        - Test  \nTest"], "ActualOutput" -> 
          HoldForm["        - Test  \nTest"], "ExpectedMessages" -> {}, 
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
          Quantity[0``7.150514997831988, "Seconds"], "CPUTimeUsed" -> 
          Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[280, "Bytes"]]], 
       23 -> TestResultObject[
         Association[
         "TestClass" -> None, "TestIndex" -> 23, "TestID" -> "ItemParagraph", 
          "Outcome" -> "Success", "Input" -> HoldForm[
            M2MD`M2MD[
             Cell["Test", "ItemParagraph"]]], "ExpectedOutput" -> 
          HoldForm["    Test"], "ActualOutput" -> HoldForm["    Test"], 
          "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
          "AbsoluteTimeUsed" -> 
          Quantity[0.0009964`4.148948716696457, "Seconds"], "CPUTimeUsed" -> 
          Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[272, "Bytes"]]], 
       24 -> TestResultObject[
         Association[
         "TestClass" -> None, "TestIndex" -> 24, "TestID" -> 
          "SubitemParagraph", "Outcome" -> "Success", "Input" -> HoldForm[
            M2MD`M2MD[
             Cell["Test", "SubitemParagraph"]]], "ExpectedOutput" -> 
          HoldForm["        Test"], "ActualOutput" -> 
          HoldForm["        Test"], "ExpectedMessages" -> {}, 
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
          Quantity[0.0009972`4.149297267663723, "Seconds"], "CPUTimeUsed" -> 
          Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[272, "Bytes"]]], 
       25 -> TestResultObject[
         Association[
         "TestClass" -> None, "TestIndex" -> 25, "TestID" -> 
          "SubsubitemParagraph", "Outcome" -> "Success", "Input" -> HoldForm[
            M2MD`M2MD[
             Cell["Test\nTest", "SubsubitemParagraph"]]], "ExpectedOutput" -> 
          HoldForm["            Test  \nTest"], "ActualOutput" -> 
          HoldForm["            Test  \nTest"], "ExpectedMessages" -> {}, 
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
          Quantity[0``7.150514997831988, "Seconds"], "CPUTimeUsed" -> 
          Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[280, "Bytes"]]], 
       26 -> TestResultObject[
         Association[
         "TestClass" -> None, "TestIndex" -> 26, "TestID" -> "ItemNumbered", 
          "Outcome" -> "Success", "Input" -> HoldForm[
            M2MD`M2MD[
             Cell["Test", "ItemNumbered"]]], "ExpectedOutput" -> 
          HoldForm["1. Test"], "ActualOutput" -> HoldForm["1. Test"], 
          "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
          "AbsoluteTimeUsed" -> Quantity[0``7.150514997831988, "Seconds"], 
          "CPUTimeUsed" -> Quantity[0., "Seconds"], "MemoryUsed" -> 
          Quantity[264, "Bytes"]]], 27 -> TestResultObject[
         Association[
         "TestClass" -> None, "TestIndex" -> 27, "TestID" -> 
          "SubitemNumbered", "Outcome" -> "Success", "Input" -> HoldForm[
            M2MD`M2MD[
             Cell["Test", "SubitemNumbered"]]], "ExpectedOutput" -> 
          HoldForm["    1. Test"], "ActualOutput" -> HoldForm["    1. Test"], 
          "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
          "AbsoluteTimeUsed" -> Quantity[0``7.150514997831988, "Seconds"], 
          "CPUTimeUsed" -> Quantity[0., "Seconds"], "MemoryUsed" -> 
          Quantity[272, "Bytes"]]], 28 -> TestResultObject[
         Association[
         "TestClass" -> None, "TestIndex" -> 28, "TestID" -> 
          "SubsubitemNumbered", "Outcome" -> "Success", "Input" -> HoldForm[
            M2MD`M2MD[
             Cell["Test\nTest", "SubsubitemNumbered"]]], "ExpectedOutput" -> 
          HoldForm["        1. Test  \nTest"], "ActualOutput" -> 
          HoldForm["        1. Test  \nTest"], "ExpectedMessages" -> {}, 
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
          Quantity[0.0010019`4.151339374437593, "Seconds"], "CPUTimeUsed" -> 
          Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[280, "Bytes"]]], 
       29 -> TestResultObject[
         Association[
         "TestClass" -> None, "TestIndex" -> 29, "TestID" -> "Inline cells", 
          "Outcome" -> "Success", "Input" -> HoldForm[
            M2MD`M2MD[
             Cell[
              TextData[{"asdasd ", 
                StyleBox["adsd", FontWeight -> "Bold"], 
                Cell[
                 BoxData[
                  RowBox[{"1", "*", "1"}]]]}], "Text"], "ImagesExportURL" -> 
             None]], "ExpectedOutput" -> HoldForm["asdasd **adsd**`1*1`"], 
          "ActualOutput" -> HoldForm["asdasd **adsd**`1*1`"], 
          "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
          "AbsoluteTimeUsed" -> 
          Quantity[0.0235008`5.52159764434508, "Seconds"], "CPUTimeUsed" -> 
          Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[280, "Bytes"]]]], 
     "TestsSucceededIndices" -> {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 
      15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29}, 
     "TestsFailedIndices" -> {12}, "TestsFailedWrongResultsIndices" -> {12}, 
     "TestsFailedWithMessagesIndices" -> {}, 
     "TestsFailedWithErrorsIndices" -> {}]],
   Editable->False,
   SelectWithContents->True,
   Selectable->False], "}"}]], "Output",
 CellLabel->"Out[4]=",ExpressionUUID->"ba29ddf7-4c5f-448a-a16f-87421cb1bb04"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"reports", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<TestsFailed\>\"", "]"}]], "Input",
 CellLabel->"In[5]:=",ExpressionUUID->"d22e7dbc-33d2-4263-aca5-976ce47d7d6e"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"TestsFailedWrongResults\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"12", "\[Rule]", 
      InterpretationBox[
       RowBox[{
        TagBox["TestResultObject",
         "SummaryHead"], "[", 
        DynamicModuleBox[{Typeset`open$$ = True, Typeset`embedState$$ = 
         "Ready"}, 
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{
                   InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    TraditionalForm]]]}, PlotRange -> {{0, 1}, {0, 1}}, 
                  Background -> GrayLevel[0.93], Axes -> False, AspectRatio -> 
                  1, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                  FrameTicks -> None, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Simple output\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{
                   InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    TraditionalForm]]]}, PlotRange -> {{0, 1}, {0, 1}}, 
                  Background -> GrayLevel[0.93], Axes -> False, AspectRatio -> 
                  1, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                  FrameTicks -> None, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Simple output\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Input: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    RowBox[{"M2MD", "[", 
                    RowBox[{"Cell", "[", 
                    RowBox[{
                    
                    RowBox[{"BoxData", "[", 
                    "\"\\\"E:\\\\\\\\Idea Projects\\\\\\\\M2MD\\\"\"", "]"}], 
                    ",", "\"Output\""}], "]"}], "]"}], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Expected output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    "\"```\\n(*E:\\\\Idea Projects\\\\M2MD*)\\n```\"", 
                    Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Actual output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    "\"```\\n(*\\\"E:\\\\\\\\Idea \
Projects\\\\\\\\M2MD\\\"*)\\n```\"", Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Time taken: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    
                    TemplateBox[{
                    "0.0149592`5.325423366435592", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], "SummaryItem"]}]
                    }}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]},
          "SummaryPanel"],
         DynamicModuleValues:>{}], "]"}],
       TestResultObject[
        Association[
        "TestClass" -> None, "TestIndex" -> 12, "TestID" -> "Simple output", 
         "Outcome" -> "Failure", "Input" -> HoldForm[
           M2MD`M2MD[
            Cell[
             BoxData["\"E:\\\\Idea Projects\\\\M2MD\""], "Output"]]], 
         "ExpectedOutput" -> 
         HoldForm["```\n(*E:\\Idea Projects\\M2MD*)\n```"], "ActualOutput" -> 
         HoldForm["```\n(*\"E:\\\\Idea Projects\\\\M2MD\"*)\n```"], 
         "ExpectedMessages" -> {}, "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0.0149592`5.325423366435592, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[296, "Bytes"]]],
       Editable->False,
       SelectWithContents->True,
       Selectable->False]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"TestsFailedWithMessages\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"TestsFailedWithErrors\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[5]=",ExpressionUUID->"56d0542b-d384-4bb4-8886-b06f2756b19e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Internal`InheritedBlock", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"$MDEnvironment", " ", "=", " ", "True"}], ",", " ", "M2MD"}], 
    "}"}], ",", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Attributes", "[", "M2MD", "]"}], "=", 
     RowBox[{"{", "}"}]}], ";", "\n", "  ", 
    RowBox[{"Nest", "[", "\n", "    ", 
     RowBox[{
      RowBox[{"ReplaceAll", "[", 
       RowBox[{"DownValues", "[", "M2MD", "]"}], "]"}], "\n", "  ", ",", " ", 
      RowBox[{"Hold", " ", "@", " ", 
       RowBox[{"M2MD", " ", "@", " ", 
        RowBox[{"Cell", "[", 
         RowBox[{"\"\<1+\\n2\>\"", ",", " ", "\"\<Program\>\""}], "]"}]}]}], 
      "\n", "  ", ",", " ", "2"}], "\n", "  ", "]"}]}]}], "\n", 
  "]"}]], "Code",ExpressionUUID->"acda713c-39b6-43f6-9906-9a4d1b4bd2dc"],

Cell[BoxData[
 RowBox[{"Internal`InheritedBlock", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"$MDEnvironment", " ", "=", " ", "True"}], ",", " ", "M2MD"}], 
    "}"}], ",", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Attributes", "[", "M2MD", "]"}], "=", 
     RowBox[{"{", "}"}]}], ";", "\n", "  ", 
    RowBox[{"MatchQ", "[", "\n", "    ", 
     RowBox[{
      RowBox[{"Hold", " ", "@", " ", 
       RowBox[{"M2MD", "[", 
        RowBox[{"\"\<Program\>\"", ",", " ", 
         RowBox[{"Cell", "[", 
          RowBox[{"\"\<1+\\n2\>\"", ",", " ", "\"\<Program\>\""}], "]"}]}], 
        " ", "]"}]}], ",", "\n", "    ", 
      RowBox[{
       RowBox[{"Verbatim", "[", "Hold", "]"}], " ", "@", " ", 
       RowBox[{
        RowBox[{"Verbatim", "[", "M2MD", "]"}], "[", " ", 
        RowBox[{
         RowBox[{"_", "?", 
          RowBox[{"(", 
           RowBox[{"Echo", "@*", "InputStyleQ", "@*", "Echo"}], ")"}]}], ",", 
         " ", "cell_"}], "]"}]}]}], "\n", "  ", "]"}]}]}], "\n", 
  "]"}]], "Code",ExpressionUUID->"b660457c-2bdc-4366-8399-11881b371d72"],

Cell[BoxData[
 RowBox[{
  RowBox[{"docsCell", "=", " ", 
   RowBox[{"Cell", "[", 
    RowBox[{
     RowBox[{"TextData", "[", 
      RowBox[{"{", "\n", " ", 
       RowBox[{"\"\<Define an initialized \>\"", ",", "\n", " ", 
        RowBox[{"Cell", "[", 
         RowBox[{
          RowBox[{"BoxData", "[", "\n", "  ", 
           RowBox[{"TemplateBox", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Cell", "[", "\n", "     ", 
                RowBox[{"TextData", "[", "\"\<NetChain\>\"", "]"}], "]"}], 
               ",", "\"\<paclet:ref/NetChain\>\""}], "}"}], ",", "\n", "   ", 
             "\"\<RefLink\>\"", ",", "\n", "   ", 
             RowBox[{"BaseStyle", "->", 
              RowBox[{"{", "\"\<InlineFormula\>\"", "}"}]}]}], "]"}], "]"}], 
          ",", " ", "\"\<InlineFormula\>\"", ",", "\n", "  ", 
          RowBox[{"FontFamily", "->", "\"\<Source Sans Pro\>\""}]}], "]"}], 
        ",", "\n", " ", "\"\<:\>\""}], "\n", "}"}], "]"}], ",", " ", 
     "\"\<ExampleText\>\"", ",", "\n", " ", 
     RowBox[{"CellID", "->", "480966610"}]}], "]"}]}], 
  ";"}]], "Code",ExpressionUUID->"17228c84-e586-4f6b-a13f-f29ffa583483"],

Cell[BoxData[
 RowBox[{"M2MD", " ", "@", " ", 
  "docsCell"}]], \
"Code",ExpressionUUID->"b15620a5-c442-4376-8866-06558d8c78f5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "@", "foo"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"foo", "[", 
   RowBox[{"lbl_String", ",", " ", "url_String"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"StringTemplate", "[", "\"\<[``](``)\>\"", "]"}], "[", 
   RowBox[{"lbl", ",", " ", "url"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"foo", "[", 
    RowBox[{"lbl_String", ",", " ", 
     RowBox[{"url_String", "?", 
      RowBox[{"(", 
       RowBox[{"StringContainsQ", "[", "\"\<reference.wolfram.com\>\"", "]"}],
        ")"}]}]}], " ", "]"}], ":=", " ", 
   RowBox[{"(", "\n", "  ", 
    RowBox[{"(*", 
     RowBox[{"do", " ", "whatever"}], "*)"}], "\n", "  ", "url", "\n", 
    ")"}]}], "\n"}], "\n", 
 RowBox[{"M2MD", "[", "\n", "  ", 
  RowBox[{"docsCell", ",", " ", "\n", "  ", 
   RowBox[{"\"\<MDElementTemplates\>\"", " ", "->", " ", 
    RowBox[{"<|", "\n", "     ", 
     RowBox[{"\"\<Hyperlink\>\"", " ", "->", " ", "\"\<<*foo[#, #2]*>\>\""}], 
     "\n", "  ", "|>"}]}]}], "\n", 
  "]"}]}], "Code",ExpressionUUID->"e891cb52-c138-477c-9943-ba5593fe1b49"],

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"M2MD`Private`$MDEnvironment", " ", "=", " ", "True"}], "}"}], 
   ",", "\n", "  ", 
   RowBox[{
    RowBox[{"Hold", " ", "@", " ", 
     RowBox[{"M2MD", " ", "@", " ", 
      RowBox[{"Cell", "[", 
       RowBox[{"\"\<Test\>\"", ",", " ", "\"\<Item\>\""}], "]"}]}]}], " ", "/.",
     " ", 
    RowBox[{"DownValues", "[", "M2MD", "]"}]}]}], " ", "\n", 
  "]"}]], "Code",ExpressionUUID->"2d9c47f4-7372-416e-864c-74f5b40d1194"],

Cell[BoxData[
 RowBox[{"M2MD`Private`ItemStyleQ", "@", 
  "\"\<Item\>\""}]], \
"Code",ExpressionUUID->"1726243c-4ed4-43f6-8674-c1eac603b6d6"],

Cell[BoxData[
 RowBox[{"PrintDefinitions", " ", "@", " ", 
  "M2MD"}]], "Code",ExpressionUUID->"90270b62-de2c-4b73-b046-f207223282eb"],

Cell[BoxData[
 RowBox[{"M2MD", " ", "@", " ", 
  RowBox[{"Cell", "[", 
   RowBox[{
    RowBox[{"BoxData", "[", "\n", " ", 
     RowBox[{"RowBox", "[", 
      RowBox[{"{", "  ", 
       RowBox[{
        RowBox[{"RowBox", "[", 
         RowBox[{"{", 
          RowBox[{
          "\"\<test\>\"", ",", " ", "\"\<=\>\"", ",", " ", "\"\< \>\"", ",", 
           "    ", 
           RowBox[{"GraphicsBox", "[", 
            RowBox[{"DiskBox", "[", 
             RowBox[{"{", 
              RowBox[{"0", ",", " ", "0"}], "}"}], "]"}], "]"}]}], "}"}], 
         "]"}], ",", " ", "\"\<;\>\""}], "}"}], "]"}], "]"}], ",", " ", 
    "\"\<Code\>\""}], " ", 
   "]"}]}]], "Code",ExpressionUUID->"0b323a58-8dc8-45ca-90b5-1899b05c0f4a"],

Cell[BoxData[
 RowBox[{"M2MD", " ", "@", " ", 
  RowBox[{"Cell", "[", 
   RowBox[{
    RowBox[{"TextData", "[", 
     RowBox[{"{", "\n", " ", 
      RowBox[{"\"\<test \>\"", ",", "\n", " ", 
       RowBox[{"Cell", "[", 
        RowBox[{"BoxData", "[", "\n", "  ", 
         RowBox[{"GraphicsBox", "[", 
          RowBox[{
           RowBox[{"DiskBox", "[", 
            RowBox[{"{", 
             RowBox[{"0", ",", " ", "0"}], "}"}], "]"}], ",", " ", 
           RowBox[{"ImageSize", " ", "->", " ", "20"}]}], "]"}], "]"}], "  ", 
        "]"}]}], "\n", "}"}], "]"}], ",", " ", "\"\<Text\>\""}], 
   "]"}]}]], "Code",ExpressionUUID->"0fc696eb-cc54-4fa0-9592-990669609c7b"],

Cell[CellGroupData[{

Cell["style rules", \
"Subsection",ExpressionUUID->"f717b148-997b-430a-82e6-35c156df8026"],

Cell[BoxData[
 RowBox[{"SetDirectory", "@", "$TemporaryDirectory"}]], "Input",
 CellLabel->"In[16]:=",ExpressionUUID->"1715cf84-6479-4d8c-923f-d86b5f270f40"],

Cell[BoxData[{
 RowBox[{"M2MD", "[", " ", 
  RowBox[{"Cell", "[", 
   RowBox[{"\"\<Test\>\"", ",", " ", "\"\<MyStyle\>\""}], "]"}], "]"}], "\n", 
 RowBox[{"M2MD", "[", " ", 
  RowBox[{
   RowBox[{"Cell", "[", 
    RowBox[{"\"\<Test\>\"", ",", " ", "\"\<MyStyle\>\""}], "]"}], ",", " ", 
   RowBox[{"\"\<CellStyleRules\>\"", " ", "\[Rule]", " ", 
    RowBox[{"<|", 
     RowBox[{"\"\<MyStyle\>\"", " ", "\[Rule]", " ", "\"\<h1\>\""}], 
     "|>"}]}]}], "]"}], "\n", 
 RowBox[{"M2MD", "[", " ", 
  RowBox[{
   RowBox[{"Cell", "[", 
    RowBox[{"\"\<Test\>\"", ",", " ", "\"\<MyStyle\>\""}], "]"}], ",", " ", 
   RowBox[{"\"\<CellStyleRules\>\"", " ", "\[Rule]", " ", 
    RowBox[{"<|", 
     RowBox[{"\"\<MyStyle\>\"", " ", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"\"\<h1\>\"", ",", " ", 
        RowBox[{
         RowBox[{"BoxesToTeXString", "[", "#", "]"}], "&"}]}], "}"}]}], 
     "|>"}]}]}], "]"}], "\n", 
 RowBox[{"M2MD", "[", " ", 
  RowBox[{
   RowBox[{"Cell", "[", 
    RowBox[{"\"\<Test\>\"", ",", " ", "\"\<MyStyle\>\""}], "]"}], ",", " ", 
   RowBox[{"\"\<CellStyleRules\>\"", " ", "\[Rule]", " ", 
    RowBox[{"<|", 
     RowBox[{"\"\<MyStyle\>\"", " ", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"\"\<h1\>\"", ",", " ", 
        RowBox[{
         RowBox[{"ToImageElement", "[", "#", "]"}], "&"}]}], "}"}]}], 
     "|>"}]}]}], "]"}]}], "Code",
 CellLabel->"In[17]:=",ExpressionUUID->"eaf31bfc-43b5-4ee1-9b62-dbe6f3ef2ecd"],

Cell[" specification {tag_, parsers___} translates to ", \
"Text",ExpressionUUID->"7ed0adeb-bc69-4543-9cad-b1be780426dc"],

Cell[BoxData[
 RowBox[{"MDElement", "[", 
  RowBox[{"tag", ",", " ", 
   RowBox[{"parser1", "[", 
    RowBox[{"cell_", ",", " ", "style_"}], "]"}], ",", " ", 
   RowBox[{"parser2", "[", 
    RowBox[{"cell_", ",", " ", "style_"}], "]"}], ",", " ", "___"}], 
  "]"}]], "Code",ExpressionUUID->"ea446a9d-91d4-454c-9818-c9eeba495d9e"],

Cell["\<\
Built-in parsers :
BoxesToMDString
BoxesToInputString
ToImageElement
BoxesToTeXString

But you can use whatever you want as long as it returns something that \
MDElementTemplate for given tag can handle.\
\>", "Text",ExpressionUUID->"1a0ae989-cd03-44cf-a988-9fc47f4c2a9f"],

Cell["We can go even further and define a brand new conversion:", \
"Text",ExpressionUUID->"5de9ed14-c9e5-41b7-9bd9-867373faab85"],

Cell[BoxData[
 RowBox[{"\n", 
  RowBox[{"M2MD", "[", " ", 
   RowBox[{
    RowBox[{"Cell", "[", 
     RowBox[{"\"\<Test\>\"", ",", " ", "\"\<MyStyle\>\""}], "]"}], ",", " ", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<CellStyleRules\>\"", " ", "\[Rule]", " ", 
     RowBox[{"<|", 
      RowBox[{"\"\<MyStyle\>\"", " ", "\[Rule]", " ", "\"\<myTag\>\""}], 
      "|>"}]}], ",", "\[IndentingNewLine]", " ", 
    RowBox[{"\"\<MDElementTemplates\>\"", "\[Rule]", 
     RowBox[{"<|", 
      RowBox[{"\"\<myTag\>\"", "\[Rule]", "\"\<# ((((``))))\\n---\>\""}], 
      "|>"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellLabel->"In[25]:=",ExpressionUUID->"41679aa3-cd5b-4514-b3d6-a26534bf015b"],

Cell["\<\
Together with \[OpenCurlyDoubleQuote]IgnoredStyles\[CloseCurlyDoubleQuote] \
option you can probably get a lot done with standard documentation notebooks\
\>", "Text",ExpressionUUID->"a2c7340a-2a89-4013-8189-ddf7fb74b415"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1225, 872},
WindowMargins->{{Automatic, 115}, {Automatic, 60}},
PrivateNotebookOptions->{"FileOutlineCache"->False},
TrackCellChangeTimes->False,
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (January 31, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"a30fb722-6a7c-4cb4-b35e-8e13214df9f1"
]

